<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
  <POU Name="FB_SerialCRC16Reversed6BYTE" Id="{c5ec96af-1b52-4906-9c47-6511edea63bc}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_SerialCRC16Reversed6BYTE
VAR_INPUT
	puchMsg		: ULINT;//BYTE;						// nData is the Byte to calculate its CRC16			8 bit
	
	//puchMsg		: WORD:=16#0702;
	//puchMsg		: ULINT:=16#640000000601;//010600000064;//640000000601;
END_VAR
VAR_OUTPUT
	cCRC16OutReversed	: WORD;
	
END_VAR
VAR
	dataLenCounter		: UDINT:=0;
	usDataLen			: UINT:=6;
	usDataLen2	: UINT;
	uchCRCHi 	: BYTE	:= 16#FF ;			//high byte of CRC initialized
	uchCRCLo 	: BYTE	:= 16#FF ;			//low byte of CRC initialized
	uIndex		: BYTE;						//will index into CRC lookup table
	//CRC16out	: WORD;
	CRC16out1	: WORD;
	CRC16out2	: BYTE;
	puchMsg88	: BYTE;
	CRC16out1String	: STRING(255);
	CRC16out2String	: STRING(255);
	CRC16out3String	: STRING(255);
	puchMsgString	: STRING(255);
	muchMsgMODByteExt	: WORD	:=2#100000000;
	puchMsgLSB	: BYTE;
	//mypuchMsg8: ARRAY[0..20] OF BYTE;
	//myawCRCWord	: ARRAY[0..255] OF BYTE;
	//myuINdex	: ARRAY[0..20] OF BYTE;

//Table of CRC values for high–order byte
auchCRCHi: ARRAY[0..255] OF BYTE:=[
16#00, 16#C1, 16#81, 16#40, 16#01, 16#C0, 16#80, 16#41,
16#01, 16#C0, 16#80, 16#41, 16#00, 16#C1, 16#81, 16#40,
16#01, 16#C0, 16#80, 16#41, 16#00, 16#C1, 16#81, 16#40,
16#00, 16#C1, 16#81, 16#40, 16#01, 16#C0, 16#80, 16#41,
16#01, 16#C0, 16#80, 16#41, 16#00, 16#C1, 16#81, 16#40,
16#00, 16#C1, 16#81, 16#40, 16#01, 16#C0, 16#80, 16#41,
16#00, 16#C1, 16#81, 16#40, 16#01, 16#C0, 16#80, 16#41,
16#01, 16#C0, 16#80, 16#41, 16#00, 16#C1, 16#81, 16#40,
16#01, 16#C0, 16#80, 16#41, 16#00, 16#C1, 16#81, 16#40,
16#00, 16#C1, 16#81, 16#40, 16#01, 16#C0, 16#80, 16#41,
16#00, 16#C1, 16#81, 16#40, 16#01, 16#C0, 16#80, 16#41,
16#01, 16#C0, 16#80, 16#41, 16#00, 16#C1, 16#81, 16#40,
16#00, 16#C1, 16#81, 16#40, 16#01, 16#C0, 16#80, 16#41,
16#01, 16#C0, 16#80, 16#41, 16#00, 16#C1, 16#81, 16#40,
16#01, 16#C0, 16#80, 16#41, 16#00, 16#C1, 16#81, 16#40,
16#00, 16#C1, 16#81, 16#40, 16#01, 16#C0, 16#80, 16#41,
16#01, 16#C0, 16#80, 16#41, 16#00, 16#C1, 16#81, 16#40,
16#00, 16#C1, 16#81, 16#40, 16#01, 16#C0, 16#80, 16#41,
16#00, 16#C1, 16#81, 16#40, 16#01, 16#C0, 16#80, 16#41,
16#01, 16#C0, 16#80, 16#41, 16#00, 16#C1, 16#81, 16#40,
16#00, 16#C1, 16#81, 16#40, 16#01, 16#C0, 16#80, 16#41,
16#01, 16#C0, 16#80, 16#41, 16#00, 16#C1, 16#81, 16#40,
16#01, 16#C0, 16#80, 16#41, 16#00, 16#C1, 16#81, 16#40,
16#00, 16#C1, 16#81, 16#40, 16#01, 16#C0, 16#80, 16#41,
16#00, 16#C1, 16#81, 16#40, 16#01, 16#C0, 16#80, 16#41,
16#01, 16#C0, 16#80, 16#41, 16#00, 16#C1, 16#81, 16#40,
16#01, 16#C0, 16#80, 16#41, 16#00, 16#C1, 16#81, 16#40,
16#00, 16#C1, 16#81, 16#40, 16#01, 16#C0, 16#80, 16#41,
16#01, 16#C0, 16#80, 16#41, 16#00, 16#C1, 16#81, 16#40,
16#00, 16#C1, 16#81, 16#40, 16#01, 16#C0, 16#80, 16#41,
16#00, 16#C1, 16#81, 16#40, 16#01, 16#C0, 16#80, 16#41,
16#01, 16#C0, 16#80, 16#41, 16#00, 16#C1, 16#81, 16#40 ];


//Table of CRC values for low–order byte
auchCRCLo: ARRAY[0..255] OF BYTE:=[
16#00, 16#C0, 16#C1, 16#01, 16#C3, 16#03, 16#02, 16#C2,
16#C6, 16#06, 16#07, 16#C7, 16#05, 16#C5, 16#C4, 16#04,
16#CC, 16#0C, 16#0D, 16#CD, 16#0F, 16#CF, 16#CE, 16#0E,
16#0A, 16#CA, 16#CB, 16#0B, 16#C9, 16#09, 16#08, 16#C8,
16#D8, 16#18, 16#19, 16#D9, 16#1B, 16#DB, 16#DA, 16#1A,
16#1E, 16#DE, 16#DF, 16#1F, 16#DD, 16#1D, 16#1C, 16#DC,
16#14, 16#D4, 16#D5, 16#15, 16#D7, 16#17, 16#16, 16#D6,
16#D2, 16#12, 16#13, 16#D3, 16#11, 16#D1, 16#D0, 16#10,
16#F0, 16#30, 16#31, 16#F1, 16#33, 16#F3, 16#F2, 16#32,
16#36, 16#F6, 16#F7, 16#37, 16#F5, 16#35, 16#34, 16#F4,
16#3C, 16#FC, 16#FD, 16#3D, 16#FF, 16#3F, 16#3E, 16#FE,
16#FA, 16#3A, 16#3B, 16#FB, 16#39, 16#F9, 16#F8, 16#38,
16#28, 16#E8, 16#E9, 16#29, 16#EB, 16#2B, 16#2A, 16#EA,
16#EE, 16#2E, 16#2F, 16#EF, 16#2D, 16#ED, 16#EC, 16#2C,
16#E4, 16#24, 16#25, 16#E5, 16#27, 16#E7, 16#E6, 16#26,
16#22, 16#E2, 16#E3, 16#23, 16#E1, 16#21, 16#20, 16#E0,
16#A0, 16#60, 16#61, 16#A1, 16#63, 16#A3, 16#A2, 16#62,
16#66, 16#A6, 16#A7, 16#67, 16#A5, 16#65, 16#64, 16#A4,
16#6C, 16#AC, 16#AD, 16#6D, 16#AF, 16#6F, 16#6E, 16#AE,
16#AA, 16#6A, 16#6B, 16#AB, 16#69, 16#A9, 16#A8, 16#68,
16#78, 16#B8, 16#B9, 16#79, 16#BB, 16#7B, 16#7A, 16#BA,
16#BE, 16#7E, 16#7F, 16#BF, 16#7D, 16#BD, 16#BC, 16#7C,
16#B4, 16#74, 16#75, 16#B5, 16#77, 16#B7, 16#B6, 16#76,
16#72, 16#B2, 16#B3, 16#73, 16#B1, 16#71, 16#70, 16#B0,
16#50, 16#90, 16#91, 16#51, 16#93, 16#53, 16#52, 16#92,
16#96, 16#56, 16#57, 16#97, 16#55, 16#95, 16#94, 16#54,
16#9C, 16#5C, 16#5D, 16#9D, 16#5F, 16#9F, 16#9E, 16#5E,
16#5A, 16#9A, 16#9B, 16#5B, 16#99, 16#59, 16#58, 16#98,
16#88, 16#48, 16#49, 16#89, 16#4B, 16#8B, 16#8A, 16#4A,
16#4E, 16#8E, 16#8F, 16#4F, 16#8D, 16#4D, 16#4C, 16#8C,
16#44, 16#84, 16#85, 16#45, 16#87, 16#47, 16#46, 16#86,
16#82, 16#42, 16#43, 16#83, 16#41, 16#81, 16#80, 16#40 ];









END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[usDataLen2:=SIZEOF(puchMsg);
	uchCRCHi 	:= 16#FF ;			//high byte of CRC initialized
	uchCRCLo 	:= 16#FF ;			//low byte of CRC initialized
	usDataLen	:=6;
//puchMsgString := LINT_TO_HEXSTR( puchMsg, 4, FALSE );
//puchMsg88:= UINT_TO_BYTE(16#FFFF);
WHILE usDataLen>0 DO
	usDataLen:=usDataLen-1;
	//puchMsg8:= UINT_TO_BYTE(puchMsg MOD muchMsgMODByteExt);
	puchMsgLSB:= ULINT_TO_BYTE(puchMsg MOD muchMsgMODByteExt);
	uIndex := uchCRCLo XOR puchMsgLSB;
	puchMsg := SHR (puchMsg, 8);
	uchCRCLo := uchCRCHi XOR auchCRCHi[uIndex];
	uchCRCHi := auchCRCLo[uIndex];
	dataLenCounter:=dataLenCounter+1;
END_WHILE
IF usDataLen<1 THEN
	CRC16out1:=uchCRCHi;
	CRC16out2:=uchCRCLo;
	CRC16out1String := DWORD_TO_HEXSTR( CRC16out1, 2, FALSE );
	CRC16out2String := DWORD_TO_HEXSTR( CRC16out2, 2, FALSE );
	cCRC16OutReversed:=SHL(BYTE_TO_WORD(uchCRCHi),8)+uchCRCLo;
	CRC16out3String := DWORD_TO_HEXSTR( cCRC16OutReversed, 4, FALSE );	
END_IF
]]></ST>
    </Implementation>
    <LineIds Name="FB_SerialCRC16Reversed6BYTE">
      <LineId Id="124" Count="0" />
      <LineId Id="265" Count="0" />
      <LineId Id="264" Count="0" />
      <LineId Id="266" Count="0" />
      <LineId Id="125" Count="5" />
      <LineId Id="132" Count="0" />
      <LineId Id="134" Count="2" />
      <LineId Id="263" Count="0" />
      <LineId Id="137" Count="7" />
      <LineId Id="146" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>